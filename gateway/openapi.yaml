openapi: 3.0.1
servers:
  - url: 'https://openeo.eodc.eu/'
    description: 'The URL to the EODC API'
    variables:
      version:
        default: v0.4
        description: API versioning
info:
  title: EODC API
  version: 0.4.0
  description: 'The EODC API provides access to the EODC services and data, as well as access to the openEO endpoints.'
  contact:
    name: Luca Foresta
    url: 'https://openeo.eodc.eu'
    email: luca.foresta@eodc.eu
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
externalDocs:
  description: EODC API Description
  url: 'https://openeo.eodc.eu/redoc'
tags:
  - name: OpenAPI
    description: The OpenAPI specification and Tools for inspecting
  - name: Capabilities
    description: General information about the API implementation and other supported capabilities at the back-end.
  - name: EO Data Discovery
    description: Discovery of Earth observation datasets that are available at the back-end.
  - name: Process Discovery
    description: Discovery of processes that are available at the back-end.
  - name: File Management
    description: Management of user-uploaded assets and processed data.
  - name: Account Management
    description: Authentication of users.
  - name: Process Graph Management
    description: Management of stored process graphs.
  - name: Batch Job Management
    description: Management of batch processing tasks (jobs) and their results.
  - name: Secondary Services Management
    description: On-demand access to data using other web service protocols.

paths:
  /:
    $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1
  /.well-known/openeo:
      $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1.well-known~1openeo
  /output_formats:
    $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1output_formats
  /udf_runtimes:
      $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1udf_runtimes
  /service_types:
    $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1service_types

  /collections:
    get:
      $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1collections
    post:
      summary: Post a request to refresh the cache
      description: >-
        The request will refresh the stored cache for all collections and each individual collection.
        \n\n **Note:** This is an extension of the EODC API!
      requestBody:
        content:
          application/json:
            schema:
              title: Collections cache refresh
              type: object
              required:
                - use_cache
              properties:
                use_cache:
                  type: boolean
      security:
        - {}
        - Bearer: []
      responses:
        '200':
          description: The cache has been refreshed
        4XX:
          $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/components/responses/client_error
        5XX:
          $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/components/responses/server_error
      
  /collections/{collection_id}:
    $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1collections~1{collection_id}

  /credentials/oidc:
    $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1credentials~1oidc
  /me:
    $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1me

  /processes:
    get:
      $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1processes/get
    post:
      summary: Creates a new process.
      description: >-
        The request will ask the back-end to create a new process using the desciption send in the request body.
        \n\n **Note:** This is an extension of the EODC API!
      tags:
        - Process Discovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1processes/get/responses/200/content/application~1json/schema/properties/processes/items
      security:
        - {}
        - Bearer: []
      responses:
        '200':
          description: The processes has been successfully created.
        4XX:
          $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/components/responses/client_error
        5XX:
          $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/components/responses/server_error

  /process_graphs/{process_graph_id}:
    $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1process_graphs~1{process_graph_id}
  /process_graphs:
    $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1process_graphs
  /validation:
    $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1validation

  /jobs:
    $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1jobs
  /result:
    $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1result
  /jobs/{job_id}:
    $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1jobs~1{job_id}
  /jobs/{job_id}/results:
    $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1jobs~1{job_id}~1results
  /jobs/{job_id}/estimate:
    $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1jobs~1{job_id}~1estimate

  /files/{user_id}:
    $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1files~1{user_id}
  /files/{user_id}/{path}:
      $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/paths/~1files~1{user_id}~1{path}

  /openapi:
    get:
      summary: OpenAPI v3.0.1 specification
      description: >-
        The request will return the OpenAPI v3.0.1 specification as JSON document.
        \n\n **Note:** This is an extension of the EODC API!
      tags:
        - OpenAPI
      responses:
        '200':
          description: The OpenAPI v3.0.1 specification.
        4XX:
          $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/components/responses/client_error
        5XX:
          $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/components/responses/server_error
  /redoc:
    get:
      summary: API Reference
      description: >-
        The request will return a ReDoc client that can be used to inspect the OpenAPI v3.0.1 specification.
        \n\n **Note:** This is an extension of the EODC API!
      tags:
        - OpenAPI
      responses:
        '200':
          description: Returns the ReDoc client to view the OpenAPI v3.0.1 specification.
        4XX:
          $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/components/responses/client_error
        5XX:
          $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/components/responses/server_error

  /health:
    get:
      summary: Gateway Sanity Check
      description: >-
        The request will return a 200 HTTP code if the gateway is running.
        \n\n **Note:** This is an extension of the EODC API!
      tags:
        - OpenAPI
      responses:
        '200':
          description: The gateway is running.
        4XX:
          $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/components/responses/client_error
        5XX:
          $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/components/responses/server_error
components:
  schemas:
    process_graph:
      $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/components/schemas/process_graph
    variable:
      $ref: https://raw.githubusercontent.com/Open-EO/openeo-api/0.4.0/openapi.json#/components/schemas/variable
    detail:
      type: string
      description: Detail level of the record (full, short, file_paths)
      enum: [
        "full",
        "short",
        "file_path"
      ]
      default: short
      example: short
    spatial_extent:
      type: string
      description: "Spatial extent covered by the data ( Bbox: [-4, -4, 4, 4] or WKT ((-4 -4, -4 4, 4 -4, 4 4, -4 -4)) )."
      pattern: ^(\[(\-?\d{1,3}\,?\s*){4}\]|\(\((\-?\d{1,3}\s\-?\d{1,3}\,?\s*){5}\)\))$
      example: "[-4, -4, 4, 4]"
    temporal_extent:
      type: string
      description: Spatial extent covered by the data
      pattern: ^([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01]))\/([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01]))$
      example: 2016-01-01/2017-10-31
  parameters:
    detail:
      name: detail
      in: query
      description: Detail level of the record (full, short, file_paths)
      required: false
      schema:
        "$ref": "#/components/schemas/detail"
    spatial_extent:
      name: spatial_extent
      in: query
      description: Spatial extent covered by the data
      required: true
      schema:
        "$ref": "#/components/schemas/spatial_extent"
    temporal_extent:
      name: temporal_extent
      in: query
      description: Temporal extent covered by the data
      required: true
      schema:
        "$ref": "#/components/schemas/temporal_extent"
