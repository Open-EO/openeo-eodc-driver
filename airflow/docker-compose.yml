version: '2.1'
services:
    redis:
        container_name: airflow_redis
        image: 'redis:latest'
        command: redis-server --requirepass ${REDIS_PASSWORD}
        networks:
             - default

    postgres:
        container_name: airflow_postgres
        image: postgres:9.6
        environment:
            POSTGRES_USER: $POSTGRES_USER
            POSTGRES_PASSWORD: $POSTGRES_PASSWORD
            POSTGRES_DB: $POSTGRES_DB
            PGDATA: /var/lib/postgresql/data/pgdata
        volumes:
            - /srv/airflow/postgres:/var/lib/postgresql/data/pgdata
        networks:
            - default

    webserver:
        container_name: airflow_webserver
        build:
            context: ./build
        image: openeo-eodc-airflow:latest
        restart: always
        depends_on:
            - postgres
            - redis
        environment:
            POSTGRES_USER: $POSTGRES_USER
            POSTGRES_PASSWORD: $POSTGRES_PASSWORD
            POSTGRES_DB: $POSTGRES_DB
            REDIS_PASSWORD: $REDIS_PASSWORD
            LOAD_EX: $LOAD_EX
            FERNET_KEY: $FERNET_KEY
            EXECUTOR: $EXECUTOR
            FLASK_ENV: $FLASK_ENV
        volumes:
            - $PLUGINS:/usr/local/airflow/plugins
            - $DAGS:/usr/local/airflow/dags
        ports:
            - "8080:8080"
        # todo: --ssl_cert path --ssl_key path
        command: webserver -w 10 -d false 
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3
        networks:
            - default

    flower:
        container_name: airflow_flower
        build:
            context: ./build
        image: openeo-eodc-airflow:latest
        restart: always
        environment:
            EXECUTOR: $EXECUTOR
            REDIS_PASSWORD: $REDIS_PASSWORD
            FLASK_ENV: $FLASK_ENV
        depends_on:
            - redis
        ports:
            - "5555:5555"
        command: flower
        networks:
             - default

    scheduler:
        container_name: airflow_scheduler
        build:
            context: ./build
        image: openeo-eodc-airflow:latest
        restart: always
        depends_on:
            - webserver
        environment: 
            POSTGRES_USER: $POSTGRES_USER
            POSTGRES_PASSWORD: $POSTGRES_PASSWORD
            POSTGRES_DB: $POSTGRES_DB
            REDIS_PASSWORD: $REDIS_PASSWORD
            LOAD_EX: $LOAD_EX
            FERNET_KEY: $FERNET_KEY
            EXECUTOR: $EXECUTOR
            FLASK_ENV: $FLASK_ENV
        volumes:
            - $PLUGINS:/usr/local/airflow/plugins
            - $DAGS:/usr/local/airflow/dags
        command: scheduler
        networks:
            - default

    worker:
        build:
            context: ./build
        image: openeo-eodc-airflow:latest
        restart: always
        depends_on:
            - scheduler
        environment: 
            POSTGRES_USER: $POSTGRES_USER
            POSTGRES_PASSWORD: $POSTGRES_PASSWORD
            POSTGRES_DB: $POSTGRES_DB
            REDIS_PASSWORD: $REDIS_PASSWORD
            LOAD_EX: $LOAD_EX
            FERNET_KEY: $FERNET_KEY
            EXECUTOR: $EXECUTOR
            GDAL_VRT_ENABLE_PYTHON: $GDAL_VRT_ENABLE_PYTHON
            GDAL_VRT_PYTHON_TRUSTED_MODULES: $GDAL_VRT_PYTHON_TRUSTED_MODULES
            FLASK_ENV: $FLASK_ENV
        volumes:
            - $PLUGINS:/usr/local/airflow/plugins
            - $DAGS:/usr/local/airflow/dags
            - $HOST_INPUT:$CONTAINER_INPUT
            - $HOST_OUTPUT:$CONTAINER_OUTPUT
        command: worker
        networks:
            - default

networks:
    default:
        ## Driver options needed for OpenStack environments
        # driver: bridge
        # driver_opts:
        #     com.docker.network.driver.mtu: 1450