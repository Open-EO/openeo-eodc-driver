{
  "status": "success",
  "code": 200,
  "data": {
    "processes": [{
      "examples": [{
        "arguments": {
          "x": 0
        },
        "returns": 0
      }, {
        "arguments": {
          "x": 3.5
        },
        "returns": 3.5
      }, {
        "arguments": {
          "x": -0.4
        },
        "returns": 0.4
      }, {
        "arguments": {
          "x": -3.5
        },
        "returns": 3.5
      }],
      "exceptions": {},
      "experimental": false,
      "deprecated": false,
      "returns": {
        "schema": {
          "minItems": 0.0,
          "type": ["number", "null"],
          "minimum": 0.0
        },
        "description": "The computed absolute value."
      },
      "links": [{
        "href": "http://mathworld.wolfram.com/AbsoluteValue.html",
        "title": "Absolute value explained by Wolfram MathWorld",
        "rel": "about"
      }],
      "description": "Computes the absolute value of a real number `x`, which is the \"unsigned\" portion of x and often denoted as *|x|*.\n\nThe no-data value `null` is passed through and therefore gets propagated.",
      "id": "absolute",
      "process_graph": {
        "lt": {
          "process_id": "lt",
          "arguments": {
            "x": {
              "from_parameter": "x"
            },
            "y": 0
          }
        },
        "multiply": {
          "process_id": "multiply",
          "arguments": {
            "x": {
              "from_parameter": "x"
            },
            "y": -1
          }
        },
        "if": {
          "process_id": "if",
          "arguments": {
            "value": {
              "from_node": "lt"
            },
            "accept": {
              "from_node": "multiply"
            },
            "reject": {
              "from_parameter": "x"
            }
          },
          "result": true
        }
      },
      "categories": ["math"],
      "parameters": [{
        "experimental": false,
        "deprecated": false,
        "description": "A number.",
        "optional": false,
        "name": "x",
        "schema": {
          "minItems": 0.0,
          "type": ["number", "null"]
        }
      }],
      "summary": "Absolute value"
    }, {
      "examples": [{
        "arguments": {
          "x": 5,
          "y": 2.5
        },
        "returns": 7.5
      }, {
        "arguments": {
          "x": -2,
          "y": -4
        },
        "returns": -6
      }, {
        "arguments": {
          "x": 1,
          "y": null
        },
        "returns": null
      }],
      "exceptions": {},
      "experimental": false,
      "deprecated": false,
      "returns": {
        "schema": {
          "minItems": 0.0,
          "type": ["number", "null"]
        },
        "description": "The computed sum of the two numbers."
      },
      "links": [{
        "href": "http://mathworld.wolfram.com/Sum.html",
        "title": "Sum explained by Wolfram MathWorld",
        "rel": "about"
      }, {
        "href": "https://ieeexplore.ieee.org/document/8766229",
        "title": "IEEE Standard 754-2019 for Floating-Point Arithmetic",
        "rel": "about"
      }],
      "description": "Sums up the two numbers `x` and `y` (*x + y*) and returns the computed sum.\n\nNo-data values are taken into account so that `null` is returned if any element is such a value.\n\nThe computations follow [IEEE Standard 754](https://ieeexplore.ieee.org/document/8766229) whenever the processing environment supports it.",
      "id": "add",
      "process_graph": {
        "sum": {
          "process_id": "sum",
          "arguments": {
            "data": [{
              "from_parameter": "x"
            }, {
              "from_parameter": "y"
            }],
            "ignore_nodata": false
          },
          "result": true
        }
      },
      "categories": ["math"],
      "parameters": [{
        "experimental": false,
        "deprecated": false,
        "description": "The first summand.",
        "optional": false,
        "name": "x",
        "schema": {
          "minItems": 0.0,
          "type": ["number", "null"]
        }
      }, {
        "experimental": false,
        "deprecated": false,
        "description": "The second summand.",
        "optional": false,
        "name": "y",
        "schema": {
          "minItems": 0.0,
          "type": ["number", "null"]
        }
      }],
      "summary": "Addition of two numbers"
    }, {
      "examples": [{
        "arguments": {
          "x": 5,
          "y": 2.5
        },
        "returns": 2
      }, {
        "arguments": {
          "x": -2,
          "y": 4
        },
        "returns": -0.5
      }, {
        "arguments": {
          "x": 1,
          "y": null
        },
        "returns": null
      }],
      "exceptions": {
        "DivisionByZero": {
          "message": "Division by zero is not supported.",
          "http": 400
        }
      },
      "experimental": false,
      "deprecated": false,
      "returns": {
        "schema": {
          "minItems": 0.0,
          "type": ["number", "null"]
        },
        "description": "The computed result."
      },
      "links": [{
        "href": "http://mathworld.wolfram.com/Division.html",
        "title": "Division explained by Wolfram MathWorld",
        "rel": "about"
      }, {
        "href": "https://ieeexplore.ieee.org/document/8766229",
        "title": "IEEE Standard 754-2019 for Floating-Point Arithmetic",
        "rel": "about"
      }],
      "description": "Divides argument `x` by the argument `y` (*x / y*) and returns the computed result.\n\nNo-data values are taken into account so that `null` is returned if any element is such a value.\n\nThe computations follow [IEEE Standard 754](https://ieeexplore.ieee.org/document/8766229) whenever the processing environment supports it. Therefore, a division by zero results in Â±infinity if the processing environment supports it. Otherwise a `DivisionByZero` error must the thrown.",
      "id": "divide",
      "process_graph": {},
      "categories": ["math"],
      "parameters": [{
        "experimental": false,
        "deprecated": false,
        "description": "The dividend.",
        "optional": false,
        "name": "x",
        "schema": {
          "minItems": 0.0,
          "type": ["number", "null"]
        }
      }, {
        "experimental": false,
        "deprecated": false,
        "description": "The divisor.",
        "optional": false,
        "name": "y",
        "schema": {
          "minItems": 0.0,
          "type": ["number", "null"]
        }
      }],
      "summary": "Division of two numbers"
    }, {
      "examples": [{
        "arguments": {
          "data": [5, 0]
        },
        "returns": 0
      }, {
        "arguments": {
          "data": [-2, 4, 2.5]
        },
        "returns": -20
      }, {
        "arguments": {
          "data": [1, null],
          "ignore_nodata": false
        },
        "returns": null
      }, {
        "arguments": {
          "data": [-1]
        },
        "returns": -1
      }, {
        "arguments": {
          "data": [null],
          "ignore_nodata": false
        },
        "returns": null
      }, {
        "arguments": {
          "data": []
        },
        "returns": null
      }],
      "exceptions": {},
      "experimental": false,
      "deprecated": false,
      "returns": {
        "schema": {
          "minItems": 0.0,
          "type": ["number", "null"]
        },
        "description": "The computed product of the sequence of numbers."
      },
      "links": [{
        "href": "http://mathworld.wolfram.com/Product.html",
        "title": "Product explained by Wolfram MathWorld",
        "rel": "about"
      }, {
        "href": "https://ieeexplore.ieee.org/document/8766229",
        "title": "IEEE Standard 754-2019 for Floating-Point Arithmetic",
        "rel": "about"
      }],
      "description": "Multiplies all elements in a sequential array of numbers and returns the computed product.\n\nBy default no-data values are ignored. Setting `ignore_nodata` to `false` considers no-data values so that `null` is returned if any element is such a value.\n\nThe computations follow [IEEE Standard 754](https://ieeexplore.ieee.org/document/8766229) whenever the processing environment supports it.",
      "id": "product",
      "process_graph": {},
      "categories": ["math", "reducer"],
      "parameters": [{
        "experimental": false,
        "deprecated": false,
        "description": "An array of numbers.",
        "optional": false,
        "name": "data",
        "schema": {
          "minItems": 0.0,
          "items": {
            "type": ["number", "null"]
          },
          "type": "array"
        }
      }, {
        "experimental": false,
        "deprecated": false,
        "description": "Indicates whether no-data values are ignored or not. Ignores them by default. Setting this flag to `false` considers no-data values so that `null` is returned if any value is such a value.",
        "default": true,
        "optional": true,
        "name": "ignore_nodata",
        "schema": {
          "minItems": 0.0,
          "type": "boolean"
        }
      }],
      "summary": "Compute the product by multiplying numbers"
    }, {
      "examples": [{
        "arguments": {
          "x": 5,
          "y": 2.5
        },
        "returns": 2.5
      }, {
        "arguments": {
          "x": -2,
          "y": 4
        },
        "returns": -6
      }, {
        "arguments": {
          "x": 1,
          "y": null
        },
        "returns": null
      }],
      "exceptions": {},
      "experimental": false,
      "deprecated": false,
      "returns": {
        "schema": {
          "minItems": 0.0,
          "type": ["number", "null"]
        },
        "description": "The computed result."
      },
      "links": [{
        "href": "http://mathworld.wolfram.com/Subtraction.html",
        "title": "Subtraction explained by Wolfram MathWorld",
        "rel": "about"
      }, {
        "href": "https://ieeexplore.ieee.org/document/8766229",
        "title": "IEEE Standard 754-2019 for Floating-Point Arithmetic",
        "rel": "about"
      }],
      "description": "Subtracts argument `y` from the argument `x` (*x - y*) and returns the computed result.\n\nNo-data values are taken into account so that `null` is returned if any element is such a value.\n\nThe computations follow [IEEE Standard 754](https://ieeexplore.ieee.org/document/8766229) whenever the processing environment supports it.",
      "id": "subtract",
      "process_graph": {},
      "categories": ["math"],
      "parameters": [{
        "experimental": false,
        "deprecated": false,
        "description": "The minuend.",
        "optional": false,
        "name": "x",
        "schema": {
          "minItems": 0.0,
          "type": ["number", "null"]
        }
      }, {
        "experimental": false,
        "deprecated": false,
        "description": "The subtrahend.",
        "optional": false,
        "name": "y",
        "schema": {
          "minItems": 0.0,
          "type": ["number", "null"]
        }
      }],
      "summary": "Subtraction of two numbers"
    }, {
      "examples": [{
        "arguments": {
          "data": [5, 1]
        },
        "returns": 6
      }, {
        "arguments": {
          "data": [-2, 4, 2.5]
        },
        "returns": 4.5
      }, {
        "arguments": {
          "data": [1, null],
          "ignore_nodata": false
        },
        "returns": null
      }, {
        "arguments": {
          "data": [100]
        },
        "returns": 100
      }, {
        "arguments": {
          "data": [null],
          "ignore_nodata": false
        },
        "returns": null
      }, {
        "arguments": {
          "data": []
        },
        "returns": null
      }],
      "exceptions": {},
      "experimental": false,
      "deprecated": false,
      "returns": {
        "schema": {
          "minItems": 0.0,
          "type": ["number", "null"]
        },
        "description": "The computed sum of the sequence of numbers."
      },
      "links": [{
        "href": "http://mathworld.wolfram.com/Sum.html",
        "title": "Sum explained by Wolfram MathWorld",
        "rel": "about"
      }, {
        "href": "https://ieeexplore.ieee.org/document/8766229",
        "title": "IEEE Standard 754-2019 for Floating-Point Arithmetic",
        "rel": "about"
      }],
      "description": "Sums up all elements in a sequential array of numbers and returns the computed sum.\n\nBy default no-data values are ignored. Setting `ignore_nodata` to `false` considers no-data values so that `null` is returned if any element is such a value.\n\nThe computations follow [IEEE Standard 754](https://ieeexplore.ieee.org/document/8766229) whenever the processing environment supports it.",
      "id": "sum",
      "process_graph": {},
      "categories": ["math", "reducer"],
      "parameters": [{
        "experimental": false,
        "deprecated": false,
        "description": "An array of numbers.",
        "optional": false,
        "name": "data",
        "schema": {
          "minItems": 0.0,
          "items": {
            "type": ["number", "null"]
          },
          "type": "array"
        }
      }, {
        "experimental": false,
        "deprecated": false,
        "description": "Indicates whether no-data values are ignored or not. Ignores them by default. Setting this flag to `false` considers no-data values so that `null` is returned if any value is such a value.",
        "default": true,
        "optional": true,
        "name": "ignore_nodata",
        "schema": {
          "minItems": 0.0,
          "type": "boolean"
        }
      }],
      "summary": "Compute the sum by adding up numbers"
    }],
    "links": []
  }
}
