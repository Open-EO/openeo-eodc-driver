name: Integration Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  backend:
    name: Setup complete back-end
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: 3.6

    # API layer
    - name: Copy env vars
      run: cp -r sample-envs envs && cp sample.env .env
    - name: Create local folders
      run: source .env && chmod 700 setup_scripts/create_local_dirs.sh && setup_scripts/create_local_dirs.sh
    - name: Copy openapi.yml
      run: cp gateway/sample_openapi.yaml gateway/openapi.yaml
    - name: Create docker network
      run: docker network create openeo-v1.0
    - name: Start api docker-compose
      run: docker-compose -f docker-compose.yml up -d
    - name: Wait 1 minute for the docker-compose
      uses: jakejarvis/wait-action@master
      with:
        time: '60s'
    - name: Check containers are running
      run: docker ps
    - name: Check gateway is reachable
      run: curl http://localhost:3000/v1.0
    - name: Initialise databases
      run: chmod 700 setup_scripts/init_dbs.sh && setup_scripts/init_dbs.sh
    - name: Add initial database users
      run: chmod 700 setup_scripts/add_init_users.sh && setup_scripts/add_init_users.sh
    - name: Fill processes and collections
      run: pip install requests && source setup_scripts/sample-auth.sh && python setup_scripts/add_collections_and_processes.py

    # CSW Server
    - name: Copy env vars
      run: cp csw/sample.env csw/.env
    - name: Copy pycsw config
      run: cp csw/sample_pycsw.cfg csw/pycsw.cfg
    - name: Copy sample metadata xmls
      run: cp -r csw/sample-xml csw/xml
    - name: Get data
      run: echo "no data"
    - name: Start csw docker-compsoe
      run: docker-compose -f csw/docker-compose.yml up -d
    - name: Wait 1/2 minute for the docker-compose
      uses: jakejarvis/wait-action@master
      with:
        time: '30s'
    - name: Check containers are running
      run: docker ps
    - name: Insert metadata into DB
      run: docker exec pycsw /bin/sh -c 'pycsw-admin.py -c load_records -f /etc/pycsw/pycsw.cfg -p /home/pycsw/xml'

    # Airflow - Celery
    - name: Copy env vars
      run: cp airflow/sample.env airflow/.env
    - name: Add eoDataReaders deploy key
      run: echo "{{ secrets.EODATAREADER_DEPLOY_KEY }}" > airflow/build/deploy.key
    - name: Create dags directory
      run: echo `ls airflow` && mkdir airflow/dags
    - name: Start airflow docker-compose
      run: docker-compose -f airflow/docker-compose.yml -f airflow/docker-compose_dev.yml up
